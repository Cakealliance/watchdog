version: "3.8"

services:
    nginx:
        build:
            context: ./docker/local/nginx
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - "99:80"
        volumes:
            - ./:/var/www
        depends_on:
            - php

    php:
        build:
            context: ./docker/local/php
            dockerfile: Dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        restart: unless-stopped
        volumes:
            - ./:/var/www
        depends_on:
            - mysql
            - redis

    scheduler:
        build:
            context: ./docker/local/php
            dockerfile: DockerfileScheduler
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
        volumes:
            - ./:/var/www
        depends_on:
            - php
        restart: unless-stopped

    mysql:
        build:
            context: ./docker/local/mysql
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - "3310:3306"
        environment:
            MYSQL_DATABASE: $DB_DATABASE
            MYSQL_USER: $DB_USERNAME
            MYSQL_PASSWORD: $DB_PASSWORD
            MYSQL_ROOT_PASSWORD: YF92Any81vs8yzd6
            MYSQL_ROOT_HOST: "%"
        volumes:
            - mysql:/var/lib/mysql

    redis:
        build:
            context: ./docker/local/redis
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - "6399:6379"
        volumes:
            - redis:/data

    node:
        image: node:19.0.1
        working_dir: /app
        command: sh -c "npm install && npm run dev"
        volumes:
            - ./:/app
        depends_on:
            - php

    prometheus:
        image: prom/prometheus
        networks:
            - default
        volumes:
            - prometheus:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        ports:
            - '9999:9090'
        depends_on:
            - php
            - nginx

    grafana:
        image: grafana/grafana
        networks:
            - default
        ports:
            - '3333:3000'
        volumes:
            - grafana:/var/lib/grafana
        depends_on:
            - php
            - nginx
volumes:
    mysql:
    redis:
    prometheus:
    grafana:

networks:
    default:
        driver: bridge
